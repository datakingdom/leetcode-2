/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    private TreeNode pre, node1, node2;
    
    public void recoverTree(TreeNode root) {
        pre = null;
        node1 = null;
        node2 = null;
        recover(root);
        if(node1 != null && node2 != null) {
            int temp = node1.val;
            node1.val = node2.val;
            node2.val = temp;
        }
    }
    
    public void recover(TreeNode root) {
        if(root != null) {
            if(root.left != null) {
                recover(root.left);
            }
        }
        if(pre != null && pre.val > root.val) {
            if(node1 == null) {
                node1 = pre;
                node2 = root;
            }else {
                node2 = root;
            }
        }
        pre = root;
        if(root.right != null) {
            recover(root.right);
        }        
    }
}
