import java.util.*;

public class SimplifyPath {
	public String simplifyPath(String path) {
        int n = path.length();
        if(n == 0) return "/";
        
        ArrayList<String> stack = new ArrayList<String>();
        int p1 = 0, p2 = 0;
        while(path.charAt(p2) != '/') p2++; // ignore the characters before first '/'
        p1 = p2;
        
        while(p1 < n) {
            while(p2 < n && path.charAt(p2) == '/') p2++; // mulitple '/' might exist
            p1 = p2;
            while(p2 < n && path.charAt(p2) != '/') p2++;
            if(p2 == p1) break; // no more characters
            
            String str = path.substring(p1, p2);
            if(str.equals(".") == true) continue;
            else if(str.equals("..") == true) {
                if(stack.size() > 0) stack.remove(stack.size() - 1);
            }
            else stack.add(str);
            
            p1 = p2;
        }
        
        StringBuilder sb = new StringBuilder();
        for(String s : stack) {
            sb.append("/");
            sb.append(s);
        }
        
        if(sb.toString().length() == 0) return "/";
        return sb.toString();
    }
}
