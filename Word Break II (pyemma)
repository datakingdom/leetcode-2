import java.util.*;

public class WordBreakII {
	ArrayList<String> res = new ArrayList<String>();
	public List<String> wordBreak(String s, Set<String> dict) {
		int n = s.length();
		boolean[][] map = new boolean[n][n];
		boolean[] dp = new boolean[n];

		for(int i = 0; i < n; i++) {
			for(int j = 0; j <= i; j++) {
				if(j == 0) {
					if(dict.contains(s.substring(j, i+1)) == true) {
						dp[i] = true;
						map[j][i] = true;
					}
				}
				else {
					if(dp[j-1] == true && dict.contains(s.substring(j, i+1)) == true) {
						dp[i] = true;
						map[j][i] = true;
					}
				}
			}
		}
		if(dp[n-1] == false) return res;
		dfs(map, s, "", 0);

		return res;
	}

	private void dfs(boolean[][] map, String s, String cur, int ind) {
		int n = s.length();
		if(ind == n) {
			res.add(cur);
		}
		else {
			for(int i = ind; i < n; i++) {
				if(map[ind][i] == true) {
					StringBuffer sb = new StringBuffer(cur);
					sb.append(s.substring(ind, i+1));
					if(i != n-1) sb.append(" ");
					dfs(map, s, sb.toString(), i+1);
				}
			}
		}
	}

	public static void main(String[] args) {
		HashSet<String> dict = new HashSet<String>();
		dict.add("cat"); dict.add("cats"); dict.add("and"); dict.add("sand"); dict.add("dog");
		String s = "catsanddog";
		WordBreakII wb = new WordBreakII();
		System.out.println(wb.wordBreak(s, dict));
	}
}
