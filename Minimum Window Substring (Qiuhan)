class Solution {
public:
    string minWindow(string S, string T) {
        if(T.length()==0||S.length()==0){
            return "";
        }
        int count=0;
        vector<int>countT(256,0);
        vector<int>countS(256,0);
        
        for(int i=0;i<T.size();i++){
            countT[T[i]]++;
        }
        int minWin=INT_MAX;
        int minstart=0;
        int winstart=0;
        for(int i=0;i<S.size();i++){
            if(countT[S[i]]>0){
                countS[S[i]]++;
                if(countS[S[i]]<=countT[S[i]]){
                    count++;
                }
            }
            if(count==T.size()){
                while(countS[S[winstart]]>countT[S[winstart]]||countT[S[winstart]]==0){
                    countS[S[winstart]]--;
                    winstart++;
                }
                if(minWin>(i-winstart+1)){
                    minWin=i-winstart+1;
                    minstart=winstart;
                }
            }
        }
        if(minWin==INT_MAX) return "";
        else return S.substr(minstart,minWin);
        
    }
};
