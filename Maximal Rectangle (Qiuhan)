class Solution {
public:
    int maximalRectangle(vector<vector<char> > &matrix) {
        int m=matrix.size();
        if(m==0){
            return 0;
        }
        int n=matrix[0].size();
        int result = 0;
        vector<int>height(n+1,0);
        for(int i=0;i<m;i++){
            stack<int> s;
            for (int j = 0; j < n+1; j++) {
                if(j<n){
                    if(matrix[i][j]=='1'){
                        height[j]++;
                    }
                    else{
                        height[j]=0;
                    }
                }
                if (s.empty() || height[j]>=height[s.top()]){
                    s.push(j);
                }
                else {
                    while(!s.empty()&&height[j]<height[s.top()]){
                        int tmp = s.top();
                        s.pop();
                        result = max(result,height[tmp] * (s.empty() ? j : j - s.top() - 1));
                    }
                    s.push(j);
                }
            }
        }
        return result;
    }
};
