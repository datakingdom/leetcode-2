public class Solution {
    public static int minCut(String s) {
    	int n=s.length();
        boolean[][] palindrome=new boolean[n][n];
        int []dp=new int[n+1];
        for (int i = 0; i < n; i++) {//initialize
			for (int j = 0; j < n; j++) {
				palindrome[i][j]=false;
			}
		}
        for (int i = 0; i <= n; i++) {
			dp[i]=n-1-i;
		}
        for (int i = n-1; i >=0; i--) {
			for (int j = i; j < n; j++) {
				if(s.charAt(i)==s.charAt(j) && (j-i<=2 || palindrome[i+1][j-1])){
					palindrome[i][j]=true;
					dp[i]=Math.min(dp[i], dp[j+1]+1);
				}
			}
		}
        return dp[0];
    }
}
