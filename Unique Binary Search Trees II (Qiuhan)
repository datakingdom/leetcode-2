class Solution {
    //DFS
public:
    vector<TreeNode *> generateTrees(int n) {
        vector<TreeNode*>res;
        if(n==0){
            res.push_back(nullptr);
            return res;
        }
        if(n==1){
            res.push_back(new TreeNode(n));
            return res;
        }
        return generate(1,n);
    }
    vector<TreeNode *> generate(int start,int end){
        vector<TreeNode *>res;
        if(start>end){
            res.push_back(nullptr);
            return res;
        }
        for(int i=start;i<=end;i++){
            vector<TreeNode*>left=generate(start,i-1);
            vector<TreeNode*>right=generate(i+1,end);
            for(int j=0;j<left.size();j++){
                for(int k=0;k<right.size();k++){
                    TreeNode*node=new TreeNode(i);
                    node->left=left[j];
                    node->right=right[k];
                    res.push_back(node);
                }
            }
        }
        return res;
        
    }
};
