import java.util.*;

public class SubstringWithConcatenationofAllWords {
	public List<Integer> findSubstring(String S, String[] L) {
        int n = L.length;
        if(n == 0) return new ArrayList<Integer>();
        int len = L[0].length();
        if(S.length() < len*n) return new ArrayList<Integer>();
        
        HashMap<String, Integer> dict = new HashMap<String, Integer>();
        HashMap<String, Integer> win = new HashMap<String, Integer>();
        
        for(int i = 0; i < n; i++) {
            if(dict.containsKey(L[i]) == false) dict.put(L[i], 1);
            else dict.put(L[i], dict.get(L[i]) + 1);
        }
        
        ArrayList<Integer> res = new ArrayList<Integer>();
        
        for(int i = 0; i <= S.length() - len*n; i++) {
            win.clear();
            boolean ok = true;
            for(int j = i; j < i+len*n; j += len) {
                String str = S.substring(j, j+len);
                if(dict.containsKey(str) == true) {
                    if(win.containsKey(str) == false) win.put(str, 1);
                    else {
                        if(win.get(str) < dict.get(str)) win.put(str, win.get(str)+1);
                        else { ok = false; break;} // terminate immediately, otherwise might TLE
                    }
                }
                else { ok = false; break;}
            }
            if(ok == true) res.add(i);
        }
        return res;
    }
}
