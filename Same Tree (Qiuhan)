class Solution {
public:
    bool isSameTree(TreeNode *p, TreeNode *q) {
        queue<TreeNode*>que;
		que.push(p);
		que.push(q);
		while(!que.empty()){
			TreeNode*temp1=que.front();
			que.pop();
			TreeNode*temp2=que.front();
			que.pop();
			if(!temp1&&!temp2)
				continue;
			if(!temp1||!temp2)
				return false;
			if(temp1->val!=temp2->val)
				return false;
			que.push(temp1->left);
			que.push(temp2->left);
			que.push(temp1->right);
			que.push(temp2->right);
		}
		return true;
    }
	bool isSameTree1(TreeNode*p,TreeNode*q){
		if(!p&&!q)
			return true;
		if(!p||!q)
			return false;
		return (p->val==q->val)&&isSameTree1(p->left,q->left)&&isSameTree1(p->right,q->right);
	}
};
