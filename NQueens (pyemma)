import java.util.*;

public class NQueens {
	ArrayList<String[]> res;
    boolean[][] board;
    public List<String[]> solveNQueens(int n) {
        res = new ArrayList<String[]>();
        if(n == 0) return res;
        board = new boolean[n][n];
        dfs(board, 0);
        return res;
    }
    
    private void dfs(boolean[][] board, int ind) {
        if(ind == board.length) {
            String[] strs = new String[board.length];
            for(int i = 0; i < board.length; i++) {
                StringBuffer sb = new StringBuffer();
                for(int j = 0; j < board.length; j++) {
                    if(board[i][j] == true) sb.append("Q");
                    else sb.append(".");
                }
                strs[i] = sb.toString();
            }
            res.add(strs);
        }
        else {
            for(int i = 0; i < board.length; i++) {
                if(check(board, ind, i) == true) {
                    board[ind][i] = true;
                    dfs(board, ind+1);
                    board[ind][i] = false;
                }
            }
        }
    }
    
    private boolean check(boolean[][] board, int x, int y) {
        int n = board.length;
        for(int i = 0; i < n; i++) {
            if(board[x][i] == true || board[i][y] == true)
                return false;
        }
        
        int xx = x, yy = y;
        while(xx >= 0 && yy >= 0) {
            if(board[xx][yy] == true)
                return false;
            xx--; yy--;
        }
        
        xx = x; yy = y;
        while(xx >= 0 && yy < n) {
            if(board[xx][yy] == true)
                return false;
            xx--; yy++;
        }
        
        xx = x; yy = y;
        while(xx < n && yy >= 0) {
            if(board[xx][yy] == true)
                return false;
            xx++; yy--;
        }
        
        xx = x; yy = y;
        while(xx < n && yy < n) {
            if(board[xx][yy] == true) 
                return false;
            xx++; yy++;
        }
        
        return true;
    }
}
