/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *rotateRight(ListNode *head, int k) 
	{
		if (head == NULL || k == 0) return head;
        ListNode *end = head;
		for (int i = 0; i < k; i++) end = (end->next != NULL)? end->next: head;
		ListNode *start = head;
		while (end->next != NULL)
		{
			end = end->next;
			start = start->next;
		}
		ListNode *newHead = (start->next != NULL)? start->next: head;
		end->next = head;
		start->next = NULL;
		return newHead;
    }
};
