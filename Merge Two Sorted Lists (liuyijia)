/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) 
	{
		if (l1 == NULL) return l2;
		if (l2 == NULL) return l1;
        ListNode *head = new ListNode(0);
		ListNode *current = head;
		while (l1 != NULL && l2 != NULL)
		{
			if (l1->val < l2->val) 
			{
				current->next = l1;
				l1 = l1->next;
			}
			else
			{
				current->next = l2;
				l2 = l2->next;
			}
			current = current->next;
		}
		while (l1 != NULL)
		{
			current->next = l1;
			l1 = l1->next;
			current = current->next;
		}
		while (l2 != NULL)
		{
			current->next = l2;
			l2 = l2->next;
			current = current->next;
		}
		current->next = NULL;
		return head->next;
	}
};
